diff -ur tensorflow/python/data/ops/multi_device_iterator_ops.py tensorflow.mod/python/data/ops/multi_device_iterator_ops.py
--- tensorflow/python/data/ops/multi_device_iterator_ops.py	2019-12-05 13:14:38.408610257 -0800
+++ tensorflow.mod/python/data/ops/multi_device_iterator_ops.py	2019-12-11 15:37:14.962178954 -0800
@@ -285,11 +285,12 @@
     # Create the per device iterators.
     self._device_iterators = []
     for i, device in enumerate(self._devices):
-      with ops.device(device):
-        ds = _create_device_dataset(self._prototype_device_datasets[i],
-                                    self._incarnation_id,
-                                    self._prefetch_buffer_size,
-                                    self._experimental_slack)
+      # DAI: We need to disable per device iterators and prefetching because
+      # they currently prevent dataset iterators from being serialized and
+      # deserialized. Opt for the simplest patch which will redundantly
+      # fetch input to the CPU (_source_device) for each device.
+      with ops.device(self._source_device):  # DAI: disable per device iterators
+        ds = self._dataset  # DAI: disable prefetch
         if context.executing_eagerly():
           self._device_iterators.append(dataset_ops.make_one_shot_iterator(ds))
         else:
